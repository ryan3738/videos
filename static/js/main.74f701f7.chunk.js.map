{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","key","id","videoId","VideoDetail","videoSrc","description","KEY","App","selectedVideo","onTermSubmit","a","youtube","get","params","q","part","maxResults","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"0PAsCeA,E,4MAnCbC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACnB,EAAKC,SAAS,CAAEH,KAAME,EAAEE,OAAOC,S,EAG/BC,aAAe,SAAAJ,GAEXA,EAAEK,iBAIF,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAInC,OACE,yBAAKS,UAAU,yBACb,0BAAMC,SAAUC,KAAKL,aAAcG,UAAU,WAC3C,yBAAKA,UAAU,SACb,+CACA,2BACEG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAGlBa,SAAUF,KAAKV,uB,GA3BLa,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CCeIC,G,MAfG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQX,UAAU,mBAClD,yBACEc,IAAKH,EAAMI,QAAQC,MACnBhB,UAAU,WACViB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEvC,yBAAKpB,UAAU,WACb,yBAAKA,UAAU,UAAUW,EAAMI,QAAQC,WCKhCK,EAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAAAb,GAC9B,OACE,kBAAC,EAAD,CACEc,IAAKd,EAAMe,GAAGC,QACdf,cAAeA,EACfD,MAAOA,OAKb,OAAO,yBAAKX,UAAU,2BAA2BuB,ICQpCK,EApBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,2CAGT,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACE,6BACE,yBAAK3B,UAAU,YACb,4BAAQgB,MAAM,eAAeC,IAAKY,KAEpC,yBAAK7B,UAAU,cACb,wBAAIA,UAAU,aAAaW,EAAMI,QAAQC,OACzC,2BAAIL,EAAMI,QAAQe,gBCVpBC,EAAM,0CAsDGC,E,4MApDb1C,MAAQ,CAAEgC,OAAQ,GAAIW,cAAe,M,EAMrCC,a,uCAAe,WAAM3C,GAAN,eAAA4C,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5CC,OAAQ,CACNC,EAAGhD,EACHiD,KAAM,UACNrC,KAAM,QACNsC,WAAY,EACZhB,IAAI,GAAD,OAAKM,MAPC,OACPW,EADO,OAWb,EAAKhD,SAAS,CACZ4B,OAAQoB,EAASC,KAAKC,MACtBX,cAAeS,EAASC,KAAKC,MAAM,KAbxB,2C,wDAiBfhC,cAAgB,SAAAD,GACd,EAAKjB,SAAS,CAAEuC,cAAetB,K,kEArB/BT,KAAKgC,aAAa,mB,+BAyBlB,OACE,yBAAKlC,UAAU,gBAIb,kBAAC,EAAD,CAAWH,aAAcK,KAAKgC,eAC9B,yBAAKlC,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAaW,MAAOT,KAAKZ,MAAM2C,iBAEjC,yBAAKjC,UAAU,oBACb,kBAAC,EAAD,CACEY,cAAeV,KAAKU,cACpBU,OAAQpB,KAAKZ,MAAMgC,iB,GA3CjBjB,IAAMC,WCHxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.74f701f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  onInputChange = (e) => {\r\nthis.setState({ term: e.target.value })\r\n  };\r\n\r\nonFormSubmit = e => {\r\n    //prevent default form submittal when user submits form or hits enter\r\n    e.preventDefault();\r\n\r\n    // TODO: Make sure well call\r\n    // callback from parent component\r\n    this.props.onFormSubmit(this.state.term);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Video Search</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              //In line function to link text input to component state\r\n              //onChange={e => this.setState({ term: e.target.value })}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});\r\n","import \"./VideoItem.css\";\r\nimport React from \"react\";\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n      <img\r\n        alt={video.snippet.title}\r\n        className=\"ui image\"\r\n        src={video.snippet.thumbnails.medium.url}\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"header\">{video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map(video => {\r\n    return (\r\n      <VideoItem\r\n        key={video.id.videoId}\r\n        onVideoSelect={onVideoSelect}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n  // props.videos\r\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n        <iframe title=\"video player\" src={videoSrc} />\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport youtube from \"../apis/youtube\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\n\r\nconst KEY = \"AIzaSyBCHusKVj2eeJWklEMtrlX8prtKk5eqseQ\";\r\nclass App extends React.Component {\r\n  state = { videos: [], selectedVideo: null };\r\n\r\n  componentDidMount() {\r\n    this.onTermSubmit(\"mountain bike\");\r\n  }\r\n\r\n  onTermSubmit = async term => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: term,\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        maxResults: 5,\r\n        key: `${KEY}`\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0]\r\n    });\r\n  };\r\n\r\n  onVideoSelect = video => {\r\n    this.setState({ selectedVideo: video });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        {/* Callback name \"onFormSubmit\" can be any term.\r\n          Typical convention is to match it to the callback function name.\r\n          In this case that is \"onTermSubmit\" */}\r\n        <SearchBar onFormSubmit={this.onTermSubmit} />\r\n        <div className=\"ui grid\">\r\n          <div className=\"ui row\">\r\n            <div className=\"eleven wide column\">\r\n              <VideoDetail video={this.state.selectedVideo} />\r\n            </div>\r\n            <div className=\"five wide column\">\r\n              <VideoList\r\n                onVideoSelect={this.onVideoSelect}\r\n                videos={this.state.videos}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}